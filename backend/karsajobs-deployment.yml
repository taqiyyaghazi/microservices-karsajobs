# Specify the API version
apiVersion: apps/v1
#  Specify type of the Kubernetes resource
kind: Deployment
# Define metadata for the Deployment resource
metadata:
  # Specify the name of the Deployment
  name: app-backend
  # Specify key-value pairs that are used to identify and organize resources
  labels:
    app: backend
# Define the specification of the Deployment resource
spec:
  # Specify the number of replicas of the pods
  replicas: 1
  # Specify how the Deployment should select which pods to manage
  selector:
    # Select pods that have a label of app: backend
    matchLabels:
      app: backend
  # Define the pod template that the Deployment will use to create replicas
  template:
    # Specify the labels that should be applied to the pod template
    metadata:
      labels:
        app: backend
    spec:
      # Define the container that will run in the pod
      containers:
        # Specify the name of the container
        - name: karsajobs
          # specifies the Docker image that the container should use
          image: taqiyyaghazi/karsajobs:latest
          # Specify the policy that the image will only be pulled if it's not already present on the node
          imagePullPolicy: IfNotPresent
          # Specify the ports that the container should listen on
          ports:
            - containerPort: 8080
          # Define the environment variables that the container should use
          env:
            - name: APP_PORT
              value: '8080'
            - name: MONGO_HOST
              value: 'mongo'
            - name: MONGO_USER
              valueFrom:
                # Get value from mongo-secret
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_ROOT_USERNAME
            - name: MONGO_PASS
              valueFrom:
                # Get value from mongo-secret
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_ROOT_PASSWORD
